APPLICATION NAME  : threads_and_handles_asynchronized_program


********************************************************************


main activity.xml




<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/randomText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Waiting..."
        android:textSize="18sp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>



********************************************************************************************************************


mainactivity.kt


package com.example.threads_and_handles_asynchronized_program

import android.os.Bundle
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val runThread = Runnable {
            for (i in 0..10) {
                val num = Math.random()
                Log.d("Random Number", "Random Number is $num")

                // Update the UI from the background thread safely
                runOnUiThread {
                    randomText.text = "Random Number: $num"
                }

                Thread.sleep(2000)
            }
        }

        val th = Thread(runThread)
        th.start()
    }
}





